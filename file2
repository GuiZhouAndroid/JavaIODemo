    public static void fileInputStreamByteRead() {
        FileInputStream fileInputStream = null;
        try {
            fileInputStream = new FileInputStream("file");//工程目录为默认为IDEA的当前路径
            int readByteNum;
            StringBuffer stringBuffer = new StringBuffer();
            //fileInputStream.read(new byte[4]))读取返回的int是字节的总数量，不是字节数据本身
            byte[] bytes = new byte[4];
            while ((readByteNum = fileInputStream.read(bytes)) != -1) {
                //按照4个字节大小遍历n次，遍历一次byte数组转换一次String字符串
                System.out.println("遍历中===" + new String(bytes, 0, readByteNum));
                //拼接遍历转换后的String字符串
                stringBuffer.append(new String(bytes, 0, readByteNum));
            }
            System.out.println("遍历结束后拼接" + stringBuffer);
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            if (fileInputStream != null) {
                try {
                    fileInputStream.close();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        }
    }    public static void fileInputStreamByteRead() {
        FileInputStream fileInputStream = null;
        try {
            fileInputStream = new FileInputStream("file");//工程目录为默认为IDEA的当前路径
            int readByteNum;
            StringBuffer stringBuffer = new StringBuffer();
            //fileInputStream.read(new byte[4]))读取返回的int是字节的总数量，不是字节数据本身
            byte[] bytes = new byte[4];
            while ((readByteNum = fileInputStream.read(bytes)) != -1) {
                //按照4个字节大小遍历n次，遍历一次byte数组转换一次String字符串
                System.out.println("遍历中===" + new String(bytes, 0, readByteNum));
                //拼接遍历转换后的String字符串
                stringBuffer.append(new String(bytes, 0, readByteNum));
            }
            System.out.println("遍历结束后拼接" + stringBuffer);
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            if (fileInputStream != null) {
                try {
                    fileInputStream.close();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        }
    }